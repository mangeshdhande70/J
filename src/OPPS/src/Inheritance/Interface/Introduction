


An interface in Java is a blueprint of a class. It has static constants and abstract methods.

The interface in Java is a mechanism to achieve abstraction. There can be only abstract methods in
the Java interface, not method body. It is used to achieve abstraction and multiple inheritance in Java.

In other words, you can say that interfaces can have abstract methods and variables. It cannot have a method body.


Why use Java interface?
There are mainly three reasons to use interface. They are given below.

- It is used to achieve abstraction.
- By interface, we can support the functionality of multiple inheritance.
- It can be used to achieve loose coupling.



Note -

The Java compiler adds public and abstract keywords before the interface method. Moreover, it adds public, static and
 final keywords before data members.


  interface bank{

     int rateOfIntrest(); == public abstract int rateOfIntrest();

     int variable = 5;    == public static final int = 5;

     }